{"uid":"b39c0e4a7f7b54cb","name":"test_deposit_crypto","fullName":"test_case.test_balance_wallete_scenario_.TestScenario#test_deposit_crypto","historyId":"b343fae7320b0590c86ead90997fa33a","time":{"start":1728655985736,"stop":1728656004472,"duration":18736},"status":"failed","statusMessage":"AssertionError: assets 리스트 데이터 유효성 검사\nassert False\n +  where False = is_valid_deposit_crypto_list()\n +    where is_valid_deposit_crypto_list = <page.assets_page.AssetsPage object at 0x106a9b5e0>.is_valid_deposit_crypto_list\n +      where <page.assets_page.AssetsPage object at 0x106a9b5e0> = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>.assets_page","statusTrace":"self = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>\n\n    def test_deposit_crypto(self):\n        self.common_page.click_element(self.assets_page.bottom_tab_assets_button())\n        self.common_page.click_element(self.assets_page.deposit_button())\n    \n>       assert self.assets_page.is_valid_deposit_crypto_list(), \"assets 리스트 데이터 유효성 검사\"\nE       AssertionError: assets 리스트 데이터 유효성 검사\nE       assert False\nE        +  where False = is_valid_deposit_crypto_list()\nE        +    where is_valid_deposit_crypto_list = <page.assets_page.AssetsPage object at 0x106a9b5e0>.is_valid_deposit_crypto_list\nE        +      where <page.assets_page.AssetsPage object at 0x106a9b5e0> = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>.assets_page\n\ntest_case/test_balance_wallete_scenario_.py:43: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"os_type","time":{"start":1728655959633,"stop":1728655959633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"appium_server","time":{"start":1728655959634,"stop":1728655971672,"duration":12038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"driver","time":{"start":1728655982990,"stop":1728655984400,"duration":1410},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"setup","time":{"start":1728655984400,"stop":1728655985735,"duration":1335},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assets 리스트 데이터 유효성 검사\nassert False\n +  where False = is_valid_deposit_crypto_list()\n +    where is_valid_deposit_crypto_list = <page.assets_page.AssetsPage object at 0x106a9b5e0>.is_valid_deposit_crypto_list\n +      where <page.assets_page.AssetsPage object at 0x106a9b5e0> = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>.assets_page","statusTrace":"self = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>\n\n    def test_deposit_crypto(self):\n        self.common_page.click_element(self.assets_page.bottom_tab_assets_button())\n        self.common_page.click_element(self.assets_page.deposit_button())\n    \n>       assert self.assets_page.is_valid_deposit_crypto_list(), \"assets 리스트 데이터 유효성 검사\"\nE       AssertionError: assets 리스트 데이터 유효성 검사\nE       assert False\nE        +  where False = is_valid_deposit_crypto_list()\nE        +    where is_valid_deposit_crypto_list = <page.assets_page.AssetsPage object at 0x106a9b5e0>.is_valid_deposit_crypto_list\nE        +      where <page.assets_page.AssetsPage object at 0x106a9b5e0> = <test_balance_wallete_scenario_.TestScenario object at 0x106a16070>.assets_page\n\ntest_case/test_balance_wallete_scenario_.py:43: AssertionError","steps":[],"attachments":[{"uid":"3fa2a623daf29142","name":"stdout","source":"3fa2a623daf29142.txt","type":"text/plain","size":685}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1728656004543,"stop":1728656005613,"duration":1070},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"appium_server::0","time":{"start":1728656329396,"stop":1728656329412,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_balance_wallete_scenario_"},{"name":"subSuite","value":"TestScenario"},{"name":"host","value":"gimgitaeui-MacBookPro.local"},{"name":"thread","value":"5170-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_balance_wallete_scenario_"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cf8e9b358bf365f6","status":"failed","statusDetails":"AssertionError: assets 리스트 데이터 유효성 검사\nassert False\n +  where False = is_valid_deposit_crypto_list()\n +    where is_valid_deposit_crypto_list = <page.assets_page.AssetsPage object at 0x1049f0a90>.is_valid_deposit_crypto_list\n +      where <page.assets_page.AssetsPage object at 0x1049f0a90> = <test_balance_wallete_scenario_.TestScenario object at 0x10496c580>.assets_page","time":{"start":1728655558940,"stop":1728655577358,"duration":18418}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"b39c0e4a7f7b54cb.json","parameterValues":[]}