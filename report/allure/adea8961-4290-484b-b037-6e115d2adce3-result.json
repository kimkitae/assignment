{"name": "test_market_trade_normal", "status": "broken", "statusDetails": {"message": "TypeError: __init__() missing 1 required positional argument: 'rp_logger'", "trace": "self = <test_mandatory_scenarios.TestScenario object at 0x10288a070>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"4bb993b5-fab5-4b5b-9647-0a4de3b76026\")>\nos_type = 'ios', rp_logger = <Logger conftest (INFO)>\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver, os_type, rp_logger):\n>       self.common_page = CommonPage(driver, os_type, rp_logger)\n\ntest_case/test_mandatory_scenarios.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage/common_page.py:14: in __init__\n    self.gesture_control = ElementGestureControl(driver, os_type, rp_logger)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.element_gesture_control.ElementGestureControl object at 0x10299e250>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"4bb993b5-fab5-4b5b-9647-0a4de3b76026\")>\nos_type = 'ios', rp_logger = <Logger conftest (INFO)>\n\n    def __init__(self, driver, os_type, rp_logger):\n        self.logger = rp_logger\n        self.driver = driver\n>       self.execute_method = ExecuteMethod(driver, os_type)\nE       TypeError: __init__() missing 1 required positional argument: 'rp_logger'\n\npage/element_gesture_control.py:23: TypeError"}, "start": 1728661811414, "stop": 1728661811414, "uuid": "2d692c1f-cdcc-4b73-adde-0e72d9daf4eb", "historyId": "b3db562619fcde9316022223a1583361", "testCaseId": "b3db562619fcde9316022223a1583361", "fullName": "test_case.test_mandatory_scenarios.TestScenario#test_market_trade_normal", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_mandatory_scenarios"}, {"name": "subSuite", "value": "TestScenario"}, {"name": "host", "value": "gimgitaeui-MacBookPro.local"}, {"name": "thread", "value": "98828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_mandatory_scenarios"}]}