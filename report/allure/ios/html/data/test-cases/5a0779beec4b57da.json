{"uid":"5a0779beec4b57da","name":"test_validate_coin_up_down_count","fullName":"test_case.test_ui_ux_scenario.TestScenario#test_validate_coin_up_down_count","historyId":"f5c3c886d96562ae18cd172f89d0fed3","time":{"start":1728893260348,"stop":1728893303731,"duration":43383},"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: 'null'","statusTrace":"self = <test_ui_ux_scenario.TestScenario object at 0x10751b250>\n\n    def test_validate_coin_up_down_count(self):\n    \n>       up_coin_count, coin_down_count = self.market_page.get_text_coin_up_and_down()\n\ntest_case/test_ui_ux_scenario.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.market_page.MarketPage object at 0x10753a070>\n\n    def get_text_coin_up_and_down(self):\n        \"\"\"\n        Market 내 Coins are up, Coins are down 노출 및 데이터 유효성 확인\n        \"\"\"\n        time.sleep(2)\n        if self.os_type == \"ios\":\n            # 각 up, down 정규식 패턴에 포함되는 데이터 노출 확인\n            coin_up_count = self.common_page.get_text_by_keyword(\"코인up\")\n            coin_down_count = self.common_page.get_text_by_keyword(\"코인down\")\n            self.logger.info(f\"UP: {coin_up_count}, DOWN: {coin_down_count}\")\n        else :\n            # 카운트와 문자가 분리되어있어, 문자의 부모요소에서 카운트 부분을 추출하여 0 Coins are up 과 같이 단어로 조립하여 검증\n            coins_up_number_element = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"Coins are up\").fromParent(new UiSelector().className(\"android.widget.TextView\"))')\n            coins_up_number = coins_up_number_element.get_attribute('text')\n            coin_up_count = f\"{coins_up_number} Coins are up\"\n    \n            coins_down_number_element = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"Coins are down\").fromParent(new UiSelector().className(\"android.widget.TextView\"))')\n            coins_down_number = coins_down_number_element.get_attribute('text')\n            coin_down_count = f\"{coins_down_number} Coins are down\"\n    \n            self.logger.info(f\"UP: {coin_up_count}, DOWN: {coin_down_count}\")\n    \n>       up_count = int(coin_up_count.split()[0])\nE       ValueError: invalid literal for int() with base 10: 'null'\n\npage/market_page.py:156: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"rp_logger","time":{"start":1728893248171,"stop":1728893248171,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"os_type","time":{"start":1728893248171,"stop":1728893248171,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"appium_server","time":{"start":1728893248171,"stop":1728893259194,"duration":11023},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"driver","time":{"start":1728893259196,"stop":1728893259592,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"setup","time":{"start":1728893259592,"stop":1728893260347,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ValueError: invalid literal for int() with base 10: 'null'","statusTrace":"self = <test_ui_ux_scenario.TestScenario object at 0x10751b250>\n\n    def test_validate_coin_up_down_count(self):\n    \n>       up_coin_count, coin_down_count = self.market_page.get_text_coin_up_and_down()\n\ntest_case/test_ui_ux_scenario.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <page.market_page.MarketPage object at 0x10753a070>\n\n    def get_text_coin_up_and_down(self):\n        \"\"\"\n        Market 내 Coins are up, Coins are down 노출 및 데이터 유효성 확인\n        \"\"\"\n        time.sleep(2)\n        if self.os_type == \"ios\":\n            # 각 up, down 정규식 패턴에 포함되는 데이터 노출 확인\n            coin_up_count = self.common_page.get_text_by_keyword(\"코인up\")\n            coin_down_count = self.common_page.get_text_by_keyword(\"코인down\")\n            self.logger.info(f\"UP: {coin_up_count}, DOWN: {coin_down_count}\")\n        else :\n            # 카운트와 문자가 분리되어있어, 문자의 부모요소에서 카운트 부분을 추출하여 0 Coins are up 과 같이 단어로 조립하여 검증\n            coins_up_number_element = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"Coins are up\").fromParent(new UiSelector().className(\"android.widget.TextView\"))')\n            coins_up_number = coins_up_number_element.get_attribute('text')\n            coin_up_count = f\"{coins_up_number} Coins are up\"\n    \n            coins_down_number_element = self.driver.find_element(AppiumBy.ANDROID_UIAUTOMATOR, 'new UiSelector().text(\"Coins are down\").fromParent(new UiSelector().className(\"android.widget.TextView\"))')\n            coins_down_number = coins_down_number_element.get_attribute('text')\n            coin_down_count = f\"{coins_down_number} Coins are down\"\n    \n            self.logger.info(f\"UP: {coin_up_count}, DOWN: {coin_down_count}\")\n    \n>       up_count = int(coin_up_count.split()[0])\nE       ValueError: invalid literal for int() with base 10: 'null'\n\npage/market_page.py:156: ValueError","steps":[],"attachments":[{"uid":"1f8f40bc7f73e259","name":"log","source":"1f8f40bc7f73e259.txt","type":"text/plain","size":282},{"uid":"cbd8ce5fe5017771","name":"stdout","source":"cbd8ce5fe5017771.txt","type":"text/plain","size":193}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1728893303802,"stop":1728893304878,"duration":1076},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"appium_server::0","time":{"start":1728893597986,"stop":1728893598005,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_ui_ux_scenario"},{"name":"subSuite","value":"TestScenario"},{"name":"host","value":"gimgitaeui-MacBookPro.local"},{"name":"thread","value":"63680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_ui_ux_scenario"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5a0779beec4b57da.json","parameterValues":[]}