{"name": "test_notification_function", "status": "broken", "statusDetails": {"message": "TypeError: __init__() missing 1 required positional argument: 'rp_logger'", "trace": "self = <test_ui_ux_scenario.TestScenario object at 0x103939820>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"77f10acf-1b19-405e-8358-14285a3d4c79\")>\nos_type = 'ios', rp_logger = <Logger conftest (INFO)>\n\n    @pytest.fixture(autouse=True)\n    def setup(self, driver, os_type, rp_logger):\n>       self.common_page = CommonPage(driver, os_type, rp_logger)\n\ntest_case/test_ui_ux_scenario.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage/common_page.py:14: in __init__\n    self.gesture_control = ElementGestureControl(driver, os_type, rp_logger)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page.element_gesture_control.ElementGestureControl object at 0x103915490>\ndriver = <appium.webdriver.webdriver.WebDriver (session=\"77f10acf-1b19-405e-8358-14285a3d4c79\")>\nos_type = 'ios', rp_logger = <Logger conftest (INFO)>\n\n    def __init__(self, driver, os_type, rp_logger):\n        self.logger = rp_logger\n        self.driver = driver\n>       self.execute_method = ExecuteMethod(driver, os_type)\nE       TypeError: __init__() missing 1 required positional argument: 'rp_logger'\n\npage/element_gesture_control.py:23: TypeError"}, "start": 1728662219842, "stop": 1728662219842, "uuid": "c87d57a3-dfa1-42e8-8548-0eb81fc202ef", "historyId": "262d008a033a410d4160c523eedd48dd", "testCaseId": "262d008a033a410d4160c523eedd48dd", "fullName": "test_case.test_ui_ux_scenario.TestScenario#test_notification_function", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_ui_ux_scenario"}, {"name": "subSuite", "value": "TestScenario"}, {"name": "host", "value": "gimgitaeui-MacBookPro.local"}, {"name": "thread", "value": "14161-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_ui_ux_scenario"}]}